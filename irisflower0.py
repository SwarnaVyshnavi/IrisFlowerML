# -*- coding: utf-8 -*-
"""irisFlower0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MFaq8ZGt8bs6SmIQwlnYRTGGKhmDSJQH
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

columns=['sepal length','sepal width','petal length','petal width','class_labels']
df=pd.read_csv("iris.data",names=columns)
df.head()

df.describe()

sns.pairplot(df,hue='class_labels')

data=df.values
X=data[:,0:4]
Y=data[:,4]

from sklearn.model_selection import train_test_split
X_train,X_test, y_train,y_test=train_test_split(X,Y,test_size=0.2)
print(X_train)

from sklearn.svm import SVC
model_svc=SVC()
model_svc.fit(X_train,y_train)

prediction1=model_svc.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,prediction1)*100)

from sklearn.linear_model import LogisticRegression
model_LR=LogisticRegression()
model_LR.fit(X_train,y_train)

prediction2=model_LR.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,prediction1)*100)

from sklearn.tree import DecisionTreeClassifier
model_DTC=DecisionTreeClassifier()
model_DTC.fit(X_train,y_train)

prediction3=model_svc.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,prediction1)*100)

from sklearn.metrics import classification_report
print(classification_report(y_test,prediction2))

X_new=np.array([[3,2,1,0.2],[4.9,2.2,3.8,1.1],[5.3,2.5,4.6,1.9]])
prediction=model_svc.predict(X_new)
print("prediction of species:{}".format(prediction))